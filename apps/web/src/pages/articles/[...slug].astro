---
import { type CollectionEntry, getCollection } from 'astro:content';
import { render } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { getTagById } from '../../data/tags';
import { formatDate } from '../../utils';
import { css } from '../../../styled-system/css';
import { MDX } from './_components/mdx-components';
import { CategoryTag } from '../../components/category-tag';

export async function getStaticPaths() {
  const posts = await getCollection('articles');

  return posts.map((post) => ({
    params: { slug: post.id },
    props: post
  }));
}

type Props = CollectionEntry<'articles'>;

const post = Astro.props;
const { Content } = await render(post);

const validTagList = post.data.tags.filter((tagId) => typeof getTagById(tagId) !== 'undefined');
---

<Layout
  title={post.data.title}
  description={post.data.description}
>
  <article
    class={css({
      display: 'flex',
      flexDirection: 'column',
      flexGrow: '1',
      gap: 'calc(var(--spacing-unit) * 8)',
      rounded: '12',
      backgroundColor: 'white',
      padding: 'calc(var(--spacing-unit) * 4)',
      width: '100%',
      md: {
        padding: 'calc(var(--spacing-unit) * 8)'
      }
    })}
  >
    <header
      class={css({
        display: 'flex',
        flexDirection: 'column',
        gap: 'calc(var(--spacing-unit) * 4)'
      })}
    >
      <h1
        class={css({
          width: '100%',
          color: 'gray.700',
          fontSize: '24',
          fontWeight: '700',
          lineHeight: '150',
          letterSpacing: '0.04em'
        })}
      >
        {post.data.title}
      </h1>
      <div class={css({ display: 'flex', flexDirection: 'column', gap: 'calc(var(--spacing-unit) * 2)' })}>
        {
          validTagList.length > 0 ? (
            <ul
              class={css({
                display: 'flex',
                gap: 'calc(var(--spacing-unit) * 4)'
              })}
            >
              {validTagList.map((tagId) => (
                <li class="inline-block">
                  <CategoryTag href={`/categories/${tagId}/1`}>{getTagById(tagId)?.displayName}</CategoryTag>
                </li>
              ))}
            </ul>
          ) : null
        }
        <p
          class={css({
            color: 'gray.800',
            fontWeight: '400',
            fontSize: '16',
            letterSpacing: '0.04em',
            lineHeight: '150'
          })}
        >
          最終更新日: {formatDate('YYYY/MM/DD')(post.data.lastUpdatedDate ?? post.data.publishedDate)}
        </p>
      </div>
    </header>
    <div
      class={css({
        display: 'flex',
        flexDirection: 'column',
        gap: 'calc(var(--spacing-unit) * 4)'
      })}
    >
      <Content
        components={{
          a: MDX.Link,
          code: MDX.Code,
          h2: MDX.H2,
          p: MDX.Papagraph,
          table: MDX.Table,
          td: MDX.Td,
          th: MDX.Th,
          tr: MDX.Tr,
          ul: MDX.Ul
        }}
      />
    </div>
  </article>
</Layout>
